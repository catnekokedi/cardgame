
/* css/screens/collection.css */
/* Merged from menu-css/collection.css and css/collectioncardstyle.css */

#collection .collection-controls {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-bottom: 10px;
    justify-content: center;
    align-items: center;
}

#collection .collection-controls select {
    padding: 8px 12px;
    background-color: #f8f9fa; /* Light background */
    color: #333; /* Dark text */
    border-radius: 4px;
    border: 1px solid #ced4da; /* Standard light border */
    font-size: 0.85rem;
    font-family: var(--button-font);
}

.collection-stats-container {
    display: flex;
    flex-direction: row; 
    flex-wrap: wrap; 
    justify-content: center; 
    gap: 15px; 
    margin-bottom: 10px; 
    max-width: 800px; 
    margin-left: auto; 
    margin-right: auto; 
}

#collection .collection-stats-container p.collection-stats-text {
    text-align: center;
    font-size: 0.9rem;
    color: #3A3B3C; /* Dark text for the main label part */
    margin: 0; 
    padding: 6px 10px;
    background-color: rgba(255, 255, 255, 0.8); /* Light semi-transparent background */
    border-radius: 4px;
    border: 1px solid rgba(0,0,0,0.05);
    box-shadow: var(--elevation-dp1);
    flex: 1 1 auto; 
    min-width: 240px; 
}

/* Default style for all spans within stats text (primarily for values) */
#collection p.collection-stats-text span { 
    font-weight: 600;
    color: var(--material-primary); /* Values are primary color */
}

/* Specific override for the rarity completion label span */
#collection p.collection-stats-text span#rarity-completion-label {
    color: #3A3B3C; /* Dark text, same as the paragraph's base color */
    font-weight: normal; /* Standard font weight for labels */
}


.collection-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
    gap: 10px;
    margin-top: 8px;
    padding: 0 5px;
    flex-grow: 1;
    max-width: 1040px; 
    margin-left: auto;
    margin-right: auto;
}

.collection-grid .text-center p { 
    font-size: 0.8em;
    margin-top: 3px;
    color: #4F4F4F; /* Softer dark grey for base text */
}
/* Rarity text within .collection-grid .text-center p (e.g., .rarity-text-star) will inherit its specific color */

/* Card styles specific to collection enhancing global card styles */
.collection-grid .card {
    transition: border-color 0.3s ease-in-out,
                background-color 0.3s ease-in-out, 
                box-shadow 0.3s ease-in-out,
                transform 0.2s ease-out;
    background-color: var(--material-surface-2); 
    position: relative; 
    border-radius: 6px; 
    overflow: hidden; 
}
.collection-grid .card img {
    transition: filter 0.3s ease-in-out;
    position: relative;
    z-index: 1; 
    display: block; 
    width: 100%;
    height: 100%;
    object-fit: cover; 
    border-radius: inherit; 
}
.collection-grid .card::before,
.collection-grid .card::after {
    content: "";
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    border-radius: inherit;
    pointer-events: none;
    box-sizing: border-box;
    transition: opacity 0.3s ease-in-out, background 0.3s ease-in-out, border 0.3s ease-in-out, content 0.3s ease-in-out;
    display: flex;
    align-items: center;
    justify-content: center;
    font-family: 'Times New Roman', Times, serif; 
}
.collection-grid .card::before { z-index: 2; /* Original intent: border or primary effect */ }
.collection-grid .card::after { z-index: 3; /* Original intent: text symbol overlay */ }
/* Ensure ::after doesn't fully block ::before if both have backgrounds, adjust display or background properties as needed. */
/* By default, content: "" is set in global, so these will inherit that unless overridden by specific content below. */


.collection-grid .card.base { box-shadow: 0 0 4px color-mix(in srgb, var(--base-color, #B0BEC5) 25%, transparent); }
.collection-grid .card.base::before { border: 3px solid var(--base-color, #B0BEC5); border-radius: inherit; }
/* .collection-grid .card.base::after { content: '‚óè'; font-size: 18px; color: color-mix(in srgb, var(--base-color, #B0BEC5) 50%, transparent); opacity: 0.6; position: absolute; bottom: 5px; right: 7px; text-shadow: 0 0 2px rgba(0,0,0,0.2); } */
.collection-grid .card::before {
    z-index: 2;
    /* Make sure this doesn't have conflicting background if global ::before should show */
    /* Most collection ::before rules are for borders or added content, so they might be fine */
}
.collection-grid .card::after {
    z-index: 1; /* Lowered z-index to allow global ::after to potentially show through if not fully opaque */
    /* This pseudo-element was primarily used for text symbols. Now that content is '',
       we need to ensure its other properties (background, opacity, animation)
       do not conflict with the main effect from cards-global.css if that's desired.
    */
}

/* Example: Holo - global .card.holo::after has the pattern.
   Collection .card.holo::after had text and an animated gradient.
   If we want global pattern + collection border animation:
*/

.collection-grid .card.base { box-shadow: 0 0 4px color-mix(in srgb, var(--base-color, #B0BEC5) 25%, transparent); }
.collection-grid .card.base::before { border: 3px solid var(--base-color, #B0BEC5); border-radius: inherit; }
.collection-grid .card.base::after { content: ''; /* Text symbol removed */ /* Other styling removed to ensure it doesn't obscure global effects if any */ }

.collection-grid .card.rare { border: 3px solid transparent; border-image: linear-gradient(145deg, #C0C0C0, #909090, #B0B0B0, #C0C0C0) 1; box-shadow: 0 0 5px color-mix(in srgb, #A9A9A9 35%, transparent); }
.collection-grid .card.rare::after { content: ''; /* Text symbol removed */ /* Ensure this doesn't have a background that hides global .card.rare::after */ }

.collection-grid .card.foil { border: 3px solid transparent; border-image: linear-gradient(145deg, #CD7F32, #8C7853, #B87333, #CD7F32) 1; box-shadow: 0 0 6px color-mix(in srgb, #B87333 35%, transparent); }
/* Collection .card.foil::before adds a paper texture. This is a collection-specific enhancement and can stay. */
.collection-grid .card.foil::before { background-image: url("data:image/svg+xml,%3Csvg width='50' height='50' viewBox='0 0 50 50' xmlns='http://www.w3.org/2000/svg'%3E%3Cdefs%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Cpattern id='paperTexture' patternUnits='userSpaceOnUse' width='50' height='50'%3E%3Crect width='50' height='50' fill='hsl(30, 20%, 85%)'/%3E%3Crect width='50' height='50' filter='url(%23noiseFilter)' opacity='0.15'/%3E%3C/pattern%3E%3C/defs%3E%3Crect width='50' height='50' fill='url(%23paperTexture)'/%3E%3C/svg%3E"); background-color: rgba(200, 160, 120, 0.08); mix-blend-mode: overlay; opacity: 0.5; z-index: 2; }
.collection-grid .card.foil::after { content: ''; /* Text symbol removed */ /* Ensure this doesn't have a background that hides global .card.foil::after sheen */ }
.collection-grid .card.foil img { mix-blend-mode: luminosity; filter: sepia(0.05) contrast(1.05) brightness(1.02); }


@keyframes collectionHoloBorderAnimation { 0% { border-image-source: conic-gradient(from 0deg, #FF0000, #FFFF00, #00FF00, #00FFFF, #0000FF, #FF00FF, #FF0000); } 100% { border-image-source: conic-gradient(from 360deg, #FF0000, #FFFF00, #00FF00, #00FFFF, #0000FF, #FF00FF, #FF0000); } }
/* Keep collection animated border for Holo cards */
.collection-grid .card.holo { border: 4px solid transparent; border-image-slice: 1; animation: collectionHoloBorderAnimation 6s linear infinite; box-shadow: 0 0 8px color-mix(in srgb, var(--holo-color, #FFEE58) 35%, transparent); }
/* Remove conflicting background and animation from collection's ::after to let global Holo effect show */
.collection-grid .card.holo::after {
    content: ''; /* Text symbol removed */
    /* background: linear-gradient(110deg, transparent 30%, rgba(255, 255, 255, 0.35) 48%, rgba(255, 255, 255, 0.35) 52%, transparent 70%); /* REMOVED */
    /* background-size: 350% 350%; /* REMOVED */
    /* animation: collectionHoloReflectionAndTextAnimation 4.5s ease-in-out infinite alternate; /* REMOVED */
    /* opacity: 0; /* REMOVED - let global control opacity */
    /* backdrop-filter: blur(0.3px); /* Keep if desired, or remove if it interferes */
    /* mix-blend-mode: screen; /* Keep if it aligns with global or enhances */
    /* Ensure other properties don't conflict. Global ::after has its own opacity and mix-blend-mode. */
}


.collection-grid .card.star { border: 3px solid var(--star-color, #FFA726); box-shadow: 0 0 7px color-mix(in srgb, var(--star-color, #FFA726) 35%, transparent); }
/* Collection's ::before and ::after for star were only for text symbols. Removing content is enough. */
.collection-grid .card.star::before { content: ''; /* Text symbol removed */ }
.collection-grid .card.star::after { content: ''; /* Text symbol removed */ }


@keyframes collectionRainyBorderAnimation { 0%, 100% { border-image-source: linear-gradient(160deg, hsl(210, 50%, 50%), hsl(230, 40%, 45%)); } 50% { border-image-source: linear-gradient(160deg, #FF7B7B, #FFDD7B, #7BFF8D, #7BC9FF, #A87BFF, #FF7BF5); } }
/* Keep collection animated border for Rainy cards */
.collection-grid .card.rainy { border: 3px solid transparent; border-image-slice: 1; animation: collectionRainyBorderAnimation 9s linear infinite; box-shadow: 0 0 7px color-mix(in srgb, var(--rainy-color-1, hsl(210,70%,60%)) 30%, transparent); }
/* Remove conflicting background/animation from collection's ::after to let global Rainy effect show */
.collection-grid .card.rainy::after {
    content: ''; /* Text symbol removed */
    /* animation: collectionRainyOverlayAndTextAnimation 9s linear infinite; /* REMOVED */
    /* The global .card.rainy::after has its own background-image.
       Ensure any remaining properties here don't conflict or are desired additions.
       The collection's animation changed background-image and opacity. Removing it should restore global.
    */
}


.collection-grid .card.gold { border: 4px solid transparent; border-image: linear-gradient(145deg, #FFF8DC, var(--gold-color, #FFCA28) 25% 75%, #B8860B) 1; box-shadow: 0 0 10px color-mix(in srgb, var(--gold-color, #FFCA28) 45%, transparent); }
/* Collection .card.gold::before adds a gradient. This is a collection-specific enhancement and can stay. */
.collection-grid .card.gold::before { background: linear-gradient(135deg, rgba(255, 223, 0, 0.15) 0%, rgba(218, 165, 32, 0.2) 50%, rgba(184, 134, 11, 0.25) 100% ); mix-blend-mode: color-dodge; opacity: 0.6; z-index: 2; }
/* Collection .card.gold::after had text and a custom background. Remove its background to let global ::after show. */
.collection-grid .card.gold::after {
    content: ''; /* Text symbol removed */
    /* background-image: radial-gradient(...); /* REMOVED - this was the placeholder enhancement */
    /* Ensure other properties are minimal or compatible if global .card.gold::after is to show its pattern. */
}
.collection-grid .card.gold img { filter: contrast(1.05) brightness(1.03) saturate(1.05); }


@keyframes collectionShinyBorderAnimation { 0%, 100% { border-image-source: conic-gradient(from 45deg, #ffffff, var(--shiny-color, #C5CAE9), #e0e0ff, #d1fff8, var(--shiny-color, #C5CAE9), #ffffff); } 50% { border-image-source: conic-gradient(from 225deg, #ffffff, var(--shiny-color, #C5CAE9), #e0e0ff, #d1fff8, var(--shiny-color, #C5CAE9), #ffffff); } }
/* Keep collection animated border for Shiny cards */
.collection-grid .card.shiny { border: 4px solid transparent; border-image-slice: 1; animation: collectionShinyBorderAnimation 7s linear infinite; box-shadow: 0 0 12px color-mix(in srgb, var(--shiny-color, #C5CAE9) 55%, white); }
/* Collection .card.shiny::before adds a pattern. This is a collection-specific enhancement and can stay. */
.collection-grid .card.shiny::before {
    background-image:
        radial-gradient(ellipse at center, rgba(255,255,255,0.2) 0%, transparent 70%),
        repeating-linear-gradient(45deg, transparent, transparent 3px, rgba(255,255,255,0.02) 3px, rgba(255,255,255,0.02) 4px),
        repeating-linear-gradient(-45deg, transparent, transparent 3px, rgba(255,255,255,0.02) 3px, rgba(255,255,255,0.02) 4px);
    opacity: 0.7;
    z-index: 2;
    mix-blend-mode: screen; /* Soften the effect */
}
/* Collection .card.shiny::after had text and its own animation/background. Remove these to let global ::after (animated glint) show. */
.collection-grid .card.shiny::after {
    content: ''; /* Text symbol removed */
    /* background: radial-gradient(...); /* REMOVED - this was placeholder enhancement */
    /* animation: collectionShinyPlaceholderAnimation 3s ease-in-out infinite alternate; /* REMOVED */
    /* opacity: 0; /* REMOVED */
    /* Ensure other properties are minimal. Global shiny::after has content:"", width, height, bg, animation etc for the glint */
}
.collection-grid .card.shiny img { filter: brightness(1.03) contrast(1.08); }

.collection-grid .card:hover {
    transform: translateY(-4px) scale(1.03);
    z-index: 10; 
}

@media (max-width: 1080px) { .collection-grid { max-width: 910px; } }
@media (max-width: 768px) { .collection-grid { grid-template-columns: repeat(auto-fill, minmax(110px, 1fr)); gap: 8px; max-width: 100%; } .collection-stats-container { max-width: 95%; } #collection .collection-stats-container p.collection-stats-text { font-size: 0.85rem; min-width: 200px; } }
@media (max-width: 480px) { .collection-grid { grid-template-columns: repeat(auto-fill, minmax(90px, 1fr)); gap: 6px; } .collection-stats-container { flex-direction: column; align-items: center; gap: 8px; max-width: 90%; } #collection .collection-stats-container p.collection-stats-text { width: 100%; min-width: unset; max-width: 300px; } }
