/* css/mini-games/fishing-rocks.css */

#pickaxe-icon {
    position: absolute;
    right: 80px; /* Position next to watering can icon, adjust as needed */
    top: 20px;
    width: 50px;
    height: 50px;
    cursor: pointer;
    z-index: 1050;
    transition: transform 0.2s ease-in-out, filter 0.2s ease-in-out;
    filter: drop-shadow(2px 2px 3px rgba(0,0,0,0.3));
    /* Fallback styling if image src is broken */
    background-color: #d2b48c; /* Tan background */
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid #8b4513;
}
#pickaxe-icon::before {
    content: "⛏️"; /* Pickaxe emoji or text */
    font-size: 24px;
    color: #333;
}

#pickaxe-icon:hover {
    transform: scale(1.1);
}

#pickaxe-icon.selected {
    /* Example: Add a border or glow when selected */
    /* filter: drop-shadow(2px 2px 3px rgba(241, 183, 27, 0.7)) brightness(1.1); */
    box-shadow: 0 0 10px 3px gold;
    border-radius: 50%; /* If the icon is circular, this helps with the glow */
}


#fishing-rocks-container {
    position: absolute;
    bottom: 2%; /* Position at the bottom of the land area */
    left: 1%;   /* Align with tree container's left */
    width: 38%; /* Fit within 40% land area */
    height: auto; /* Auto height based on content, or a fixed small height e.g. 100px */
    min-height: 100px; /* Ensure some space for rocks */
    display: flex;
    justify-content: space-around; /* Distribute rocks horizontally */
    align-items: flex-end; /* Align rocks to the bottom of this container */
    padding: 10px 5px 5px 5px; /* Padding, less at bottom */
    gap: 10px;
    box-sizing: border-box;
    /* background-color: rgba(0,0,0,0.05); */
}

.rock-instance {
    width: 80px;
    height: 80px;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    position: relative;
    transition: transform 0.1s ease-out;
    /* Default cursor will be overridden by .pickaxe-active on parent if pickaxe selected */
    text-align: center;
    line-height: 1.2; /* For text if image fails */
    font-size: 10px;
    color: white;
    word-break: break-word;
}
.rock-instance::before { /* For displaying text if image fails */
    content: attr(data-rock-type); /* Set by JS */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: none; /* Hidden by default, shown if no background image */
}
.rock-instance:not([style*="background-image"])::before {
    display: block;
}


.rock-instance:not(.rock-empty-slot):not(.rock-respawning):hover {
    transform: scale(1.05); /* Hover effect only on actual rocks */
    cursor: pointer; /* Show pointer on hover for clickable rocks */
}


/* Base images are set in JS, these are fallbacks or can be used if JS doesn't set image */
.rock-rarity-common { background-image: url('../../gui/fishing_game/rock_common.png'); }
.rock-rarity-uncommon { background-image: url('../../gui/fishing_game/rock_uncommon.png'); }
.rock-rarity-rare { background-image: url('../../gui/fishing_game/rock_rare.png'); }
.rock-rarity-legendary { background-image: url('../../gui/fishing_game/rock_legendary.png'); }

.rock-hp-display {
    position: absolute;
    bottom: -20px; /* Adjusted for better visibility below rock */
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 0.75);
    color: white;
    padding: 3px 6px;
    font-size: 0.8em;
    border-radius: 4px;
    white-space: nowrap;
    box-shadow: 0 1px 2px rgba(0,0,0,0.5);
}

.rock-respawning {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: rgba(51, 51, 51, 0.8);
    color: #fff;
    border-radius: 8px; /* Rounded corners for the slot */
    text-align: center;
    width: 80px; /* Match rock instance size */
    height: 80px; /* Match rock instance size */
    border: 1px dashed #777;
}
.rock-respawn-timer-text {
    font-size: 0.85em;
    margin-bottom: 6px;
}
.rock-respawn-bar-container {
    width: 70%; /* Slightly smaller bar */
    height: 12px; /* Thicker bar */
    background-color: #444; /* Darker background for bar */
    border-radius: 3px;
    overflow: hidden;
    border: 1px solid #555;
}
.rock-respawn-bar {
    height: 100%;
    background-color: #76c7c0; /* A teal/blue progress color */
    width: 0%;
    transition: width 0.1s linear;
}


.rock-empty-slot {
    background-color: rgba(0,0,0,0.1);
    border: 2px dashed #666;
    border-radius: 8px;
    width: 80px;
    height: 80px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 0.7em;
    color: #555;
    /* content: "Empty"; /* This won't work directly, use JS to add text or a pseudo-element */
}
.rock-empty-slot::before {
    content: "Next Rock...";
    opacity: 0.6;
}


.rock-error {
    background-color: #ff4d4d; /* Brighter red */
    color: white;
    text-align: center;
    font-size: 0.9em;
    padding: 10px;
    border-radius: 5px;
    width: 80px;
    height: 80px;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Pickaxe cursor active on the fishing game screen */
#fish-in-sea-screen.pickaxe-active {
    cursor: url('../../gui/fishing_game/pickaxe_cursor.png'), auto; /* Apply to whole game screen */
}

/* Ensure specific interactive elements retain their normal cursors even when pickaxe is active */
#fish-in-sea-screen.pickaxe-active .fishing-ui-icon, /* General class for UI icons if one exists */
#fish-in-sea-screen.pickaxe-active #pickaxe-icon,
#fish-in-sea-screen.pickaxe-active #watering-can-icon,
#fish-in-sea-screen.pickaxe-active #fishing-basket-icon,
#fish-in-sea-screen.pickaxe-active .tree-card-slot,
#fish-in-sea-screen.pickaxe-active button,
#fish-in-sea-screen.pickaxe-active select,
#fish-in-sea-screen.pickaxe-active .custom-modal-close {
    cursor: pointer; /* Or 'default' if not interactive */
}

/* Rocks will inherit the pickaxe cursor from the screen if not overridden.
   If an active rock should have a specific interaction cursor with the pickaxe, it can be defined here.
   Otherwise, it will correctly use the pickaxe cursor. */
#fish-in-sea-screen.pickaxe-active .rock-instance:not(.rock-empty-slot):not(.rock-respawning) {
    /* cursor: url('../../gui/fishing_game/pickaxe_hit_cursor.png'), auto; /* Optional: different cursor for hitting */
    /* Inherits from #fish-in-sea-screen.pickaxe-active, which is good */
}
