/* Styles for the Fishing Tree in Fish in Sea mini-game */

#fishing-tree-container {
    position: absolute;
    /* Centered in the left 40% "land" area, significantly higher */
    left: calc(20% - 175px); /* Centering 350px tree in left 40% area */
    width: 350px;
    top: 15%;  /* Moved up significantly */
    height: 70%; /* Adjusted height */
    max-height: 550px; /* Adjusted max-height */
    background-image: url('../../gui/fishing_game/tree_placeholder.png');
    background-color: #8B4513;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 8px; /* Slightly reduced gap for smaller cards */
    padding: 15px 20px 40px 20px; /* Reduced top padding to move slots higher */
    box-sizing: border-box;
    align-items: center;
    justify-items: center;
}
#fishing-tree-container::before {
    content: 'Tree'; /* Simpler text */
    position: absolute;
    top: 8px; /* Adjusted */
    left: 50%;
    transform: translateX(-50%);
    color: rgba(255,255,255,0.1); /* Very subtle, almost invisible if image loads */
    font-size: 1.1em; /* Adjusted */
    font-weight: bold;
    z-index: 0;
    pointer-events: none;
}

.tree-card-slot {
    width: 40px; /* Smaller slots */
    height: 56px; /* Smaller slots (7:5 ratio) */
    border: 1px solid #7a3d0f;
    background-color: rgba(0,0,0,0.2);
    display: flex;
    border-radius: 50%; /* Circular display */
    overflow: hidden; /* Clip image to circle */
    box-shadow: inset 0 0 3px rgba(0,0,0,0.2);
    justify-content: center;
    align-items: center;
    /* margin: 5px; /* Removed, using grid gap now */
    background-size: cover; /* Changed to cover to fill slot better */
    background-repeat: no-repeat;
    background-position: center;
    cursor: pointer;
}

.tree-card-slot.closed,
.tree-card-slot.empty { /* Empty slots also use tree-back */
    background-image: url('../../gui/fishing_game/tree-back.png');
    background-color: rgba(0,0,0,0.3); /* Darken the back a bit */
}

.tree-card-slot.maturing {
    background-image: url('../../gui/fishing_game/tree-back.png'); /* Still show back when maturing */
    position: relative; /* For progress bar pseudo-element */
}
.tree-card-slot.maturing::after {
    content: '';
    position: absolute;
    bottom: 2px; /* Position progress bar at the bottom of the slot */
    left: 50%;
    transform: translateX(-50%);
    width: calc(100% - 8px); /* Slightly inset */
    height: 6px; /* Height of progress bar */
    background-color: rgba(0,0,0,0.3); /* Bar background */
    border-radius: 3px;
    overflow: hidden; /* Clip progress fill */
}
.tree-card-slot.maturing::before { /* The actual progress fill */
    content: '';
    position: absolute;
    bottom: 2px;
    left: 4px; /* Align with parent's inset */
    width: var(--maturation-progress, 0%); /* Controlled by JS via style property */
    height: 6px;
    background-color: #4CAF50; /* Green progress */
    border-radius: 3px;
    z-index: 1; /* Above the ::after bar background */
    transition: width 0.2s linear;
}

.tree-card-slot.revealed {
    /* Background image set by JS to actual card art */
    border: 1px solid gold; /* Highlight revealed card */
}


#tree-moisture-display {
    position: absolute;
    /* Centered below the tree container */
    left: calc(20% - 175px + (350px / 2)); /* Aligns with center of tree container */
    transform: translateX(-50%);
    /* Tree top: 15%, Tree height: 70%. Display is below this. */
    top: calc(15% + 70% + 10px); /* 5px below tree container's bottom edge (considering no border/padding) */
                                 /* The tree container has 40px bottom padding, so this needs to be relative to screen bottom or use calc carefully */
                                 /* Let's use bottom for simplicity if parent is fish-in-sea-screen */
    /* If #fish-in-sea-screen is 100% height of viewport (or its container): */
    /* Bottom of tree container is at 15% (top) + 70% (height) = 85% from top of screen */
    /* So, if moisture display is 5px below this: */
    /* top: calc(85% + 5px); /* Simpler to calculate if tree container height is percentage based and parent is screen */
    /* A more robust way might be to adjust based on the tree's bottom padding */
    bottom: calc(100% - (15% + 70% + 30px)); /* Approx: 100% - (tree.top + tree.height + tree.padding-bottom(rough estimate for visual clearance)) */
                                             /* This is complex. Let's simplify: place it a fixed distance from screen bottom, aligned with tree center */
    /* Simplified: */
    bottom: 5%; /* 5% from the bottom of the fish-in-sea-screen */
    background-color: rgba(0, 0, 0, 0.75);
    color: white;
    padding: 4px 8px; /* Slightly smaller padding */
    border-radius: 5px;
    font-size: 0.9em;
    z-index: 10;
    box-shadow: 0 2px 4px rgba(0,0,0,0.3);
}

/* Example of how slots might be absolutely positioned on a tree image */
/*
.tree-card-slot[data-slot-index="0"] { position: absolute; top: 50px; left: 30px; }
.tree-card-slot[data-slot-index="1"] { position: absolute; top: 50px; right: 30px; }
... etc. for 8 slots
*/
